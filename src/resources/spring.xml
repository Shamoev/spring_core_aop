<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:utils="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd">

    <!--all of the xml's will be in one container-->
    <import resource="loggers.xml"/>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:client.properties</value>
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
    </bean>

    <!--p: & c: are used-->
    <bean id="client" class="com.yet.spring.core.beans.Client" p:greeting="${greeting}">
        <constructor-arg value="${id}"/>
        <constructor-arg value="${name}"/>
       <!-- <property name="greeting" value="${greeting}"/>-->
    </bean>

    <bean id="app" class="com.yet.spring.core.App">
        <constructor-arg ref="client"/>
        <constructor-arg ref="cachedEventLogger"/>
        <constructor-arg ref="loggerMap"/>
    </bean>

    <utils:map id="loggerMap" key-type="com.yet.spring.core.beans.EventType" value-type="com.yet.spring.core.loggers.EventLogger">
        <entry key="INFO" value-ref="consoleEventLogger"/>
        <entry key="ERROR" value-ref="combinedEventLogger"/>
    </utils:map>



    <!--new Date for each new event-->
    <bean id="event" class="com.yet.spring.core.beans.Event" scope="prototype">
        <constructor-arg>
            <bean class="java.util.Date"/>
        </constructor-arg>
        <constructor-arg ref="dateFormat"/>
    </bean>

    <bean id="dateFormat" class="java.text.DateFormat" factory-method="getDateTimeInstance"/>

    <!--abstract bean will not be created, can be used as parent, don't have to map to some class-->
    <bean id="abstractBean" abstract="true"/>

    <!--depends-on = ... -> create after ...-->

    <!--lazy-init="true" -> bean will be created after getBean(...)-->
    <!--<beans default-lazy-int="true"> ...</beans>
        if you have a few xml files for lazy and not-lazy initialization -->

    <!--several xml files
        <import resource="spring.xml"/>-->

    <bean id="listener" class="com.yet.spring.core.util.Listener"/>

    <bean id="awareBean" class="com.yet.spring.core.util.AwareBean" init-method="init"/>

</beans>