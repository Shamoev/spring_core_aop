<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--all of the xml's will be in one container-->
    <import resource="loggers.xml"/>

    <bean id="client" class="com.yet.spring.core.beans.Client">
        <constructor-arg value="1"/>
        <constructor-arg value="Shamoev"/>
        <property name="greeting" value="Hello there!"/>
    </bean>

    <bean id="app" class="com.yet.spring.core.App">
        <constructor-arg ref="client"/>
        <constructor-arg ref="cachedEventLogger"/>
        <constructor-arg>
            <map>
                <entry key="INFO" value-ref="consoleEventLogger"/>
                <entry key="ERROR" value-ref="combinedEventLogger"/>
            </map>
        </constructor-arg>
    </bean>

    <!--new Date for each new event-->
    <bean id="event" class="com.yet.spring.core.beans.Event" scope="prototype">
        <constructor-arg>
            <bean class="java.util.Date"/>
        </constructor-arg>
        <constructor-arg ref="dateFormat"/>
    </bean>

    <bean id="dateFormat" class="java.text.DateFormat" factory-method="getDateTimeInstance"/>

    <!--abstract bean will not be created, can be used as parent, don't have to map to some class-->
    <bean id="abstractBean" abstract="true"/>

    <!--depends-on = ... -> create after ...-->

    <!--lazy-init="true" -> bean will be created after getBean(...)-->
    <!--<beans default-lazy-int="true"> ...</beans>
        if you have a few xml files for lazy and not-lazy initialization -->

    <!--several xml files
        <import resource="spring.xml"/>-->



</beans>